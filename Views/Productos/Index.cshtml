@model IEnumerable<StarFood.Models.Producto>

@{
    ViewData["Title"] = "Productos Index";
}
<div style="margin-bottom: 10px; margin-left: 20px;">
    <!-- Ajustar el margen izquierdo del contenedor principal -->
    <h1 style="margin-bottom: 10px;">Productos</h1>

    <div class="d-flex justify-content-between mb-3">
        <div style="margin-right: 10px;">
            <a class="btn btn-primary" asp-action="Create">Crear Nuevo</a>
            <a class="btn btn-warning" asp-action="Edit">Editar Producto</a>
            <a class="btn btn-danger" asp-action="Delete">Eliminar Producto</a>
        </div>
        <div class="d-flex align-items-center">
            <form class="d-flex" method="get" asp-action="Index" style="margin-right: 10px;">
                <!-- Ajustar margen derecho del formulario -->
                <input class="form-control me-2" type="search" placeholder="Buscar por nombre" aria-label="Buscar" name="searchString">
                <button class="btn btn-outline-success" type="submit">Buscar</button>
            </form>
        </div>
    </div>

    <div class="table-responsive">
        <!-- Agregar un contenedor responsive para la tabla -->
        <table class="table table-striped table-bordered" style="margin: 0 auto;">
            <!-- Centrar la tabla y aplicar margen a los lados -->
            <thead class="thead-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Nombre)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Categoria.Nombre)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().PrecioCosto)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CantidadExistente)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().PrecioVenta)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().UnidadMedida)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().FechaCaducidad)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().FechaCompra)</th>
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Proveedor.Contacto)</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                        <td>@Html.DisplayFor(modelItem => item.Categoria.Nombre)</td>
                        <td>@Html.DisplayFor(modelItem => item.PrecioCosto)</td>
                        <td>@Html.DisplayFor(modelItem => item.CantidadExistente)</td>
                        <td>@Html.DisplayFor(modelItem => item.PrecioVenta)</td>
                        <td>@Html.DisplayFor(modelItem => item.UnidadMedida)</td>
                        <td>@Html.DisplayFor(modelItem => item.FechaCaducidad)</td>
                        <td>@Html.DisplayFor(modelItem => item.FechaCompra)</td>
                        <td>@Html.DisplayFor(modelItem => item.Proveedor.Contacto)</td>
                        <td>
                            <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.IDProducto">Editar</a>
                            <a class="btn btn-sm btn-info" asp-action="Details" asp-route-id="@item.IDProducto">Detalles</a>
                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.IDProducto">Eliminar</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
