@model Tuple<IEnumerable<StarFood.Models.Producto>, StarFood.Models.Producto>

@{
    ViewData["Title"] = "Lista de Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <script src="https://kit.fontawesome.com/a076d05399.js"></script>

    <!-- Custom CSS -->
    <link rel="stylesheet" type="text/css" href="~/css/index.css">
    <link rel="stylesheet" type="text/css" href="~/css/_sidebar.css">
</head>

<body>
    <div class="container mt-4">
        <div class="row mb-3 align-items-center">
            <div class="col-md-8">
                <h2 class="mb-0">@ViewData["Title"]</h2>
                <p class="text-muted">Aquí puedes ver los productos disponibles</p>
            </div>
            <div class="col-md-4 text-end">
                <button id="btnCreateProduct" class="btn btn-info newitem-open"><i class="fas fa-plus"></i> Ingresar Nuevo Producto </button>
            </div>
        </div>

        <div class="row mb-4">
            <div class="col-md-12">
                <div class="alert alert-info" role="alert">
                    <strong>Total de Productos:</strong> @Model.Item1.Count()
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <input type="text" id="searchProduct" class="form-control" placeholder="Buscar producto...">
            </div>
            <div class="col-md-3">
                <select id="pageSize" class="form-control">
                    <option value="10">Mostrar 10</option>
                    <option value="25">Mostrar 25</option>
                    <option value="50">Mostrar 50</option>
                </select>
            </div>
        </div>

        <div class="row" id="productCards">
            @foreach (var product in Model.Item1)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@product.Nombre</h5>
                            <p class="card-text">
                                <strong>Categoría:</strong> @product.Categoria.Nombre<br>
                                <strong>Precio:</strong> @product.PrecioVenta.ToString("C")<br>
                                <strong>Cantidad:</strong> @product.CantidadExistente
                            </p>
                            <a class="btn btn-primary btn-sm me-2" href="@Url.Action("Edit", new { id = product.IDProducto })" title="Editar">
                                <i class="fas fa-pencil-alt"></i> Editar
                            </a>
                            <button class="btn btn-secondary btn-sm" onclick="copyToClipboard('@product.IDProducto')" title="Copiar ID">
                                <i class="fas fa-copy"></i> Copiar ID
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="d-flex justify-content-center">
            <nav>
                <ul class="pagination" id="paginationControls">
                    <!-- Pagination controls will be generated here -->
                </ul>
            </nav>
        </div>
    </div>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap Bundle (incluye Popper.js y Bootstrap JS) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom JS -->
    <script src="~/js/newitem.js"></script>
    <script src="~/js/_sidebar.js"></script>
    <script src="~/js/index.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            let products = @Html.Raw(Json.Serialize(Model.Item1));
            let pageSize = 10;
            let currentPage = 1;

            function renderProducts() {
                let filteredProducts = products.filter(product =>
                    product.Nombre.toLowerCase().includes($('#searchProduct').val().toLowerCase())
                );

                let paginatedProducts = filteredProducts.slice((currentPage - 1) * pageSize, currentPage * pageSize);

                $('#productCards').html('');
                paginatedProducts.forEach(product => {
                    $('#productCards').append(`
                                <div class="col-md-4 mb-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <h5 class="card-title">${product.Nombre}</h5>
                                            <p class="card-text">
                                                <strong>Categoría:</strong> ${product.Categoria.Nombre}<br>
                                                <strong>Precio:</strong> ${product.PrecioVenta.toFixed(2)}<br>
                                                <strong>Cantidad:</strong> ${product.CantidadExistente}
                                            </p>
                                            <a class="btn btn-primary btn-sm me-2" href="@Url.Action("Edit", new { id = "product.IDProducto" })" title="Editar">
                                                <i class="fas fa-pencil-alt"></i> Editar
                                            </a>
                                            <button class="btn btn-secondary btn-sm" onclick="copyToClipboard('${product.IDProducto}')" title="Copiar ID">
                                                <i class="fas fa-copy"></i> Copiar ID
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            `);
                });

                renderPagination(filteredProducts.length);
            }

            function renderPagination(totalItems) {
                let totalPages = Math.ceil(totalItems / pageSize);
                $('#paginationControls').html('');
                for (let i = 1; i <= totalPages; i++) {
                    $('#paginationControls').append(`
                                <li class="page-item ${i === currentPage ? 'active' : ''}">
                                    <a class="page-link" href="#">${i}</a>
                                </li>
                            `);
                }
            }

            $('#searchProduct').on('input', function () {
                currentPage = 1;
                renderProducts();
            });

            $('#pageSize').on('change', function () {
                pageSize = parseInt($(this).val());
                currentPage = 1;
                renderProducts();
            });

            $('#paginationControls').on('click', 'a', function (e) {
                e.preventDefault();
                currentPage = parseInt($(this).text());
                renderProducts();
            });

            renderProducts();
        });

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function () {
                alert('ID copiado al portapapeles: ' + text);
            }, function (err) {
                console.error('No se pudo copiar el texto: ', err);
            });
        }
    </script>
</body>
</html>
