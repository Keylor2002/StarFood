// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarFood.Data;


#nullable disable

namespace StarFood.Migrations
{
    [DbContext(typeof(StarfoodContext))]
    partial class StarfoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StarFood.Models.Categoria", b =>
                {
                    b.Property<int>("IDCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IDCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("StarFood.Models.DetallePedido", b =>
                {
                    b.Property<int>("IDDetallePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDDetallePedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IDPedido")
                        .HasColumnType("int");

                    b.Property<int>("IDPlatillo")
                        .HasColumnType("int");

                    b.HasKey("IDDetallePedido");

                    b.HasIndex("IDPedido");

                    b.HasIndex("IDPlatillo");

                    b.ToTable("DetallesPedido");
                });

            modelBuilder.Entity("StarFood.Models.Factura", b =>
                {
                    b.Property<int>("IDFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDFactura"));

                    b.Property<decimal>("CantidadCambio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("CantidadPago")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDMetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("IDPedido")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalVenta")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IDFactura");

                    b.HasIndex("IDMetodoPago");

                    b.HasIndex("IDPedido");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("StarFood.Models.MetodoPago", b =>
                {
                    b.Property<int>("IDMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDMetodoPago"));

                    b.Property<string>("NombreMetodoPago")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IDMetodoPago");

                    b.ToTable("MetodosPago");
                });

            modelBuilder.Entity("StarFood.Models.Pedido", b =>
                {
                    b.Property<int>("IDPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPedido"));

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.HasKey("IDPedido");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("StarFood.Models.PedidoDeProducto", b =>
                {
                    b.Property<int>("IDPedidoProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPedidoProducto"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.Property<int>("IDProveedor")
                        .HasColumnType("int");

                    b.HasKey("IDPedidoProducto");

                    b.HasIndex("IDProducto");

                    b.HasIndex("IDProveedor");

                    b.ToTable("PedidosDeProducto");
                });

            modelBuilder.Entity("StarFood.Models.Platillo", b =>
                {
                    b.Property<int>("IDPlatillo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPlatillo"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IDPlatillo");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Platillos");
                });

            modelBuilder.Entity("StarFood.Models.PlatilloProducto", b =>
                {
                    b.Property<int>("IDPlatilloProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPlatilloProducto"));

                    b.Property<int>("CantidadProducto")
                        .HasColumnType("int");

                    b.Property<int>("IDPlatillo")
                        .HasColumnType("int");

                    b.Property<int>("IDProducto")
                        .HasColumnType("int");

                    b.HasKey("IDPlatilloProducto");

                    b.HasIndex("IDPlatillo");

                    b.HasIndex("IDProducto");

                    b.ToTable("PlatillosProductos");
                });

            modelBuilder.Entity("StarFood.Models.Producto", b =>
                {
                    b.Property<int>("IDProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProducto"));

                    b.Property<int>("CantidadExistente")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDProveedor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("PrecioCosto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDProducto");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("IDProveedor");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("StarFood.Models.Proveedor", b =>
                {
                    b.Property<int>("IDProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProveedor"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("IDProveedor");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("StarFood.Models.Usuario", b =>
                {
                    b.Property<int>("IDUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDUsuario"));

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IDUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("StarFood.Models.DetallePedido", b =>
                {
                    b.HasOne("StarFood.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("IDPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarFood.Models.Platillo", "Platillo")
                        .WithMany()
                        .HasForeignKey("IDPlatillo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Platillo");
                });

            modelBuilder.Entity("StarFood.Models.Factura", b =>
                {
                    b.HasOne("StarFood.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("IDMetodoPago")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StarFood.Models.Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("IDPedido")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MetodoPago");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("StarFood.Models.Pedido", b =>
                {
                    b.HasOne("StarFood.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("StarFood.Models.PedidoDeProducto", b =>
                {
                    b.HasOne("StarFood.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StarFood.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IDProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("StarFood.Models.Platillo", b =>
                {
                    b.HasOne("StarFood.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("StarFood.Models.PlatilloProducto", b =>
                {
                    b.HasOne("StarFood.Models.Platillo", "Platillo")
                        .WithMany()
                        .HasForeignKey("IDPlatillo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StarFood.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IDProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Platillo");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("StarFood.Models.Producto", b =>
                {
                    b.HasOne("StarFood.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StarFood.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IDProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Proveedor");
                });
#pragma warning restore 612, 618
        }
    }
}
